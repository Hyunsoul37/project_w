<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.winetoy.server.comment.dao.CommentDao">
	<insert id="registerComment" 
	parameterType="shop.winetoy.server.comment.entity.CommentDto">
		INSERT INTO `wineToy`.`comment`
		(
		`review_id`,
		`comment`,
		`writer_id`,
		`parent_id`,
		`depth`,
		`tag_writer_id`
		)
		VALUES
		(
		#{reviewId},
		#{comment},
		#{writerId},
		#{parentId},
		#{depth},
		#{tagWriterId}
		)
	</insert>
	
	<select id="getCommentList" 
	resultType="shop.winetoy.server.comment.entity.CommentListEntityDto">
	 
		 SELECT 
			comment.*,
			m1.nick_name as `writer_nick`, 
			m1.profile_img as `writer_profile`,
			m2.nick_name as `tag_writer_nick`, 
			m2.profile_img as `tag_writer_profile`,
            c1.pid as `like`
		FROM 
			comment
			left join member m1 on comment.writer_id = m1.pid
			left join member m2 on comment.tag_writer_id = m2.pid
            left join 
            (select * from comment_like where comment_like.member_pid = #{pid}) 
            c1 on c1.comment_id = comment.comment_id
		 WHERE review_id = #{reviewId};
	</select>
	
	<select id="findCommentLikeWithPid"
	resultType="shop.winetoy.server.comment.entity.CommentLikeDto">
		select * from comment_like where pid = #{pid}
	</select>
	
	<select id="findCommentLike" 
	parameterType="shop.winetoy.server.comment.entity.CommentLikeDto"
	resultType="shop.winetoy.server.comment.entity.CommentLikeDto">
		select * from comment_like 
		where comment_id = #{commentId} and member_pid = #{memberPid}
	</select>
	
	<insert id="insertCommentLike"
	parameterType="shop.winetoy.server.comment.entity.CommentLikeDto"
	useGeneratedKeys="true" keyProperty="pid">
		INSERT INTO `wineToy`.`comment_like`
		(
			`comment_id`,
			`member_pid`
		)
		VALUES
		(
			#{commentId},
			#{memberPid}
		)
	</insert>
	
	<delete id="deleteCommentLike"
	parameterType="shop.winetoy.server.comment.entity.CommentLikeDto">
		delete from comment_like 
		where comment_id = #{commentId} and member_pid = #{memberPid}
	</delete>
</mapper>