<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.winetoy.server.review.dao.ReviewDao">

	<insert id="postReview"
		parameterType="shop.winetoy.server.review.entity.ReviewDto"
		useGeneratedKeys="true" keyProperty="reviewId">
		INSERT INTO `wineToy`.`review`
		(
		`review_title`,
		`wine_type`,
		`wine_name`,
		`wine_price`,
		`star_point`,
		`review_img_1`,
		`review_img_2`,
		`review_img_3`,
		`review_img_4`,
		`review_img_5`,
		`desc`,
		`writer_id`
		)
		VALUES
		(
		#{reviewTitle},
		#{wineType},
		#{wineName},
		#{winePrice},
		#{starPoint},
		#{reviewImg1},
		#{reviewImg2},
		#{reviewImg3},
		#{reviewImg4},
		#{reviewImg5},
		#{desc},
		#{writerId}
		);
	</insert>

	<insert id="insertReviewTag"
		parameterType="shop.winetoy.server.review.entity.ReviewTagDto">
		INSERT INTO `wineToy`.`review_tag`
		(
		`review_id`,
		`tag_id`
		)
		VALUES
		(
		#{reviewId},
		#{tagId}
		);
	</insert>

	<select id="searchTag"
		resultType="shop.winetoy.server.review.entity.HashTagDto">
		select * from hash_tag where tag_name = #{tagName};
	</select>

	<insert id="insertTag"
		parameterType="shop.winetoy.server.review.entity.HashTagDto"
		useGeneratedKeys="true" keyProperty="tagId">
		INSERT INTO `wineToy`.`hash_tag`
		(
		`tag_name`
		)
		VALUES
		(
		#{tagName}
		);
	</insert>

	<select id="getReviewDetail"
		resultType="shop.winetoy.server.review.entity.ReviewDto">
		select * from review where review_id = #{reviewId};
	</select>

	<select id="getReviewHashTags"
		resultType="shop.winetoy.server.review.entity.HashTagDto">
		SELECT hash_tag.* FROM hash_tag
		RIGHT JOIN review_tag
		ON
		hash_tag.tag_id = review_tag.tag_id
		WHERE review_id = #{reviewId};
	</select>

	<select id="getReview"
		resultType="shop.winetoy.server.review.entity.ReviewDto">
		select * from review;
	</select>

	<delete id="deleteReview">
		DELETE FROM `wineToy`.`review`
		WHERE review_id =
		#{reviewId}
	</delete>

	<update id="modifyReview"
		parameterType="shop.winetoy.server.review.entity.ReviewDto">
		UPDATE `wineToy`.`review`
		SET
		`review_title` = #{reviewTitle},
		`wine_type` = #{wineType},
		`wine_name` = #{wineName},
		`wine_price` = #{winePrice},
		`star_point` = #{starPoint},
		`regi_date` =
		current_timestamp(),
		`review_img_1` = #{reviewImg1},
		`review_img_2` =
		#{reviewImg2},
		`review_img_3` = #{reviewImg3},
		`review_img_4` =
		#{reviewImg4},
		`review_img_5` = #{reviewImg5},
		`desc` = #{desc}
		WHERE
		`review_id` = #{reviewId}
	</update>

	<delete id="initHashTag">
		DELETE FROM `wineToy`.`review_tag`
		WHERE review_id = #{reviewId}
	</delete>
	
	<select id="getBestReview" resultType="shop.winetoy.server.review.entity.BestReviewDto">
		select review.*, member.nick_name as writer_nick from review 
		inner join  member ON (review.writer_id = member.pid)
		order by review_like desc limit 3
	</select>
</mapper>